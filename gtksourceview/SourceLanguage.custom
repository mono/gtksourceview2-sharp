		//it was easier to reimplement this than to marshal it correctly
		public string[] MimeTypes {
                        get {
                        	string mimeTypes = GetMetadata ("mimetypes");
                        	if (mimeTypes == null)
                        		return new string [0];
                        	else
                        		return mimeTypes.Split (';');
			}
		}
		
		//it was easier to reimplement this too than to marshal it correctly
		public string[] Globs {
                        get {
                        	string globs = GetMetadata ("globs");
                        	if (globs == null)
                        		return new string [0];
                        	else
                        		return globs.Split (';');
			}
		}
		
		[DllImport("gtksourceview-2.0")]
		static extern IntPtr gtk_source_language_get_style_ids(IntPtr raw);

		public string[] StyleIds { 
			get {
				IntPtr raw_ret = gtk_source_language_get_style_ids(Handle);
				return PtrToStringArrayGFree (raw_ret);
			}
		}
		
		//Taken from Mono.Unix to avoid adding a dependency
		//modified to use GFree
		static string[] PtrToStringArrayGFree (IntPtr stringArray)
		{
			if (stringArray == IntPtr.Zero)
				return new string [0];
			
			int count = 0;
			while (Marshal.ReadIntPtr (stringArray, count*IntPtr.Size) != IntPtr.Zero)
				++count;
			
			string[] members = new string[count];
			for (int i = 0; i < count; ++i) {
				IntPtr s = Marshal.ReadIntPtr (stringArray, i * IntPtr.Size);
				members[i] = GLib.Marshaller.PtrToStringGFree (s);
			}
			GLib.Marshaller.Free (stringArray);
			return members;
		}
