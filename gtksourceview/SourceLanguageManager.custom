		
		[DllImport("gtksourceview-2.0")]
		static extern IntPtr gtk_source_language_manager_get_search_path(IntPtr raw);

		[DllImport("gtksourceview-2.0")]
		static extern void gtk_source_language_manager_set_search_path(IntPtr raw, IntPtr[] dirs);

		[GLib.Property ("search-path")]
		public string[] SearchPath {
			get  {
				IntPtr raw_ret = gtk_source_language_manager_get_search_path(Handle);
				return PointerToStringArray (raw_ret);
			}
			set  {
				IntPtr[] ptrs = StringArrayToNullTermPointer (value);
				gtk_source_language_manager_set_search_path(Handle, ptrs);
				foreach (IntPtr ptr in ptrs)
					GLib.Marshaller.Free (ptr);
			}
		}
		
		//copied from GLib.Marshaller trunk
		internal static IntPtr[] StringArrayToNullTermPointer (string[] strs)
		{
			if (strs == null)
				return new IntPtr [0];
			IntPtr[] result = new IntPtr [strs.Length + 1];
			for (int i = 0; i < strs.Length; i++)
				result [i] = GLib.Marshaller.StringToPtrGStrdup (strs [i]);
			result [strs.Length] = IntPtr.Zero;
			return result;
		}
		
		internal static string[] PointerToStringArray (IntPtr res)
		{
			ArrayList ret = new ArrayList();
			IntPtr item;
			do {
				item = Marshal.ReadIntPtr (res, ret.Count * IntPtr.Size);
				if (item != IntPtr.Zero)
					ret.Add (GLib.Marshaller.Utf8PtrToString (item));
			} while (item != IntPtr.Zero);
			return (string[])ret.ToArray(typeof(string));
		}
